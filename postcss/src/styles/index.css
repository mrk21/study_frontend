@import "common.css"; /* for postcss-import */

/* CSS Next */
/* Auto prefixer (polyfill) */
.auto-prefixer {
  display: flex;
}

/* Custom Property (polyfill) */
:root {
  --font-size: 30px;
}
.custom-property {
  font-size: var(--font-size);
}

/* Reduced Calc (polyfill) */
.reduced-calc {
  font-size: calc(var(--font-size) * 2);
}

/* Filter */
.filter {
    filter: blur(1px);
}

/* Custom Selectors (polyfill) */
@custom-selector :--custom-selectors .custom-selectors-1, .custom-selectors-2, .custom-selectors-3;

:--custom-selectors {
  color: red;
}

/* CSS Color Module Level 4 */

/** #rrggbbaa (polyfill) **/
.colors-rrggbbaa-color {
  background: #00000033;
}

/** rgba() (polyfill) **/
.colors-rgba-function {
  background: rgba(0,0,0,0.2);
}

/** gray() (polyfill) **/
.colors-gray-function {
  background: gray(0,0.2);
}

/** hwb() (polyfill) **/
/* @see: https://triple-underscore.github.io/css-color-ja.html#the-hwb-notation */
.colors-hwb-function {
  background: hwb(0, 0%, 100%, 0.2); /* hwb( <hue>, <white-percentage>, <black-percentage> [, <alpha-value> ]? ) */
}

/** color() (polyfill) **/
/** @see [11. Modifying Colors: the color-mod() function - CSS Color Module Level 4](https://drafts.csswg.org/css-color-4/#modifying-colors) **/
.colors-color-function {
  background: color(0 alpha(20%));
}

/** rebeccapurple color (polyfill) **/
.colors-rebeccapurple-color {
  background: rebeccapurple;
  color: #fff;
}

/* custom media queries (polyfill) */
@custom-media --custom-media-queries (max-width: 500px);

@media (--custom-media-queries) {
  .custom-media-queries {
    font-weight: bold;
  }
}

/* media queries ranges (polyfill) */
@media (width >= 500px) and (width <= 700px) {
  .media-queries-ranges {
    font-weight: bold;
  }
}

/* CSS Cascading & Inheritance (polyfill) */
.cascading-inheritance {
  font-size: 32px;
  background: #eee;
  padding: 5px;
}

.cascading-inheritance-reset {
  all: initial;
}

/* any-link pseudo class (polyfill) */
.any-link-pseudo-class:any-link {
  background-color: #ff0;
}

/* multiple matches pseudo class (polyfill) */
.multiple-matches-pseudo-class div:matches(.a, .c) {
  font-size: 24px;
  font-weight: bold;
}

/* multiple not pseudo class (polyfill) */
.multiple-not-pseudo-class div:not(.a, .c) {
  font-size: 24px;
  font-weight: bold;
}

/* pseudo element (polyfill) */
.pseudo-element::before {
  display: inline-block;
  content: '[before pseudo element]';
}

/* rem unit (polyfill) */
.rem-unit {
  font-size: 2rem;
}
.rem-unit > .child {
  font-size: 10px;
}
.rem-unit > .child > .child {
  font-size: 2rem;
}

/* font variant (polyfill) */
.font-variant {
  font-variant: small-caps;
}

/* nesting */
.nesting {
  & .child1 {
    background: #eee;
  }
  @nest & .child2 {
    background: #eee;
  }
  @media (width > 500px) {
    @media (width < 700px) {
      color: yellow;
    }
  }
}


/* PostCSS Plugin */
/* my plugin */
.my-plugin {
  font-weight: bold;
  custom-background: ðŸ’©;
}

/* postcss import */
.postcss-import {
  font-size: var(--font-size2);
}
